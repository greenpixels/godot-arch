name: Build and Bundle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]

jobs:
  delete-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.PAT }}
          expire-in: 3days 

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build for Linux
        run: cargo build --release

      - name: Prepare files
        run: |
          mkdir bundle
          cp target/release/godot-arch bundle/
          cp godot-arch.config.yaml bundle/

      - name: Create tar.gz archive
        run: tar -czvf godot-arch-linux.tar.gz -C bundle .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-arch-linux
          path: godot-arch-linux.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build for Windows
        run: cargo build --release

      - name: Prepare files
        run: |
          mkdir bundle
          copy target\release\godot-arch.exe bundle\
          copy godot-arch.config.yaml bundle\

      - name: Create zip archive
        run: Compress-Archive -Path bundle\* -DestinationPath godot-arch-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-arch-windows
          path: godot-arch-windows.zip


  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: godot-arch-linux
      - name: 
        run: tar xf godot-arch-linux.tar.gz -C /test_projects/project_a/
      - name: Run GodotArch for Test-Project A
        run: ./test_projects/project_a/godot-arch

  create-release:
    needs: [build-linux, build-windows]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: godot-arch-linux
          
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: godot-arch-windows

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} godot-arch-linux.tar.gz
          gh release upload ${{ github.event.release.tag_name }} godot-arch-windows.zip
